name: api production Build && Deploy to S3

on:
  push:
    branches:
      - main
    paths:
      - 'src/**/*.ts'
      - 'test/**/*.ts'
      - 'config/**/*.(yml|yaml|json)'
  pull_request:
    types: [ opened ]
    branches:
      - main
    paths:
      - 'src/**/*.ts'
      - 'test/**/*.ts'
      - 'config/**/*.(yml|yaml|json)'

env:
  ECS_SERVICE: tests-devops-lab-app               # set this to your Amazon ECS service name
  ECS_CLUSTER: tests-devops-lab                # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json # set this to the path to your Amazon ECS task definition
  CONTAINER_NAME: tests-devops-lab

jobs:
  Test:
    name: Run unit and integration tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '14','16' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure node environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: |
          npm install

      - name: Unit tests
        run: |
          echo "Tests should be run on ${{ matrix.node }}"
      #          npm test
      - name: Integration tests
        run: |
          echo "Tests should be run on ${{ matrix.node }}"
  #          npm test:e2e



  Build:
    runs-on: ubuntu-latest
    name: Build and push to DockerHub
    needs:
      - Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - id: string
        name: lowercase github repository name
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.event.repository.name }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.string.outputs.lowercase }}:${{ github.sha }}


  Deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: lowercase github repository name
        id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.event.repository.name }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.string.outputs.lowercase }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

